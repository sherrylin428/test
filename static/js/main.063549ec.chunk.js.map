{"version":3,"sources":["Redux/store/index.js","Redux/reducers/index.js","Components/TopHeader/index.js","autoComponent.js","Components/WeatherList/WeatherList.js","Item/searchInput.js","index.js"],"names":["store","createStore","state","Arr","Msg","action","type","data","forEach","item","index","id","splice","unshift","Header","props","className","SearchList","inputValue","value","toLowerCase","listView","length","cityList","filter","element","name","slice","map","listItem","WeatherListShow","ShowText","show","weather","description","main","temp","toFixed","src","icon","Searchinput","listID","placeHolder","appID","eventInput","bind","eventKeyDown","event","this","setState","target","keyCode","url","axios","get","res","status","dispatch","list","placeholder","onInput","onKeyDown","getState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"ynlyRAGO,IAAMA,EAAMC,aCDJ,WAAwD,IAAvCC,EAAsC,uDAA9B,CAAEC,IAAK,GAAIC,IAAK,IAAMC,EAAQ,uCAClE,OAAQA,EAAOC,MACX,IAAK,mBACDJ,EAAME,IAAM,0EAAeC,EAAOE,KAAtB,0BACZ,MACJ,IAAK,YACDL,EAAME,IAAM,GACZF,EAAMC,IAAIK,SAAQ,SAACC,EAAMC,GACjBD,EAAKE,KAAON,EAAOE,KAAKI,IACxBT,EAAMC,IAAIS,OAAOF,EAAO,MAGhCR,EAAMC,IAAIU,QAAQR,EAAOE,MAKjC,OAAOL,K,MChBI,SAASY,EAAOC,GAC9B,OACC,qBAAKC,UAAU,SAAf,SACC,kD,YCHY,SAASC,EAAWF,GAC/B,IAAIG,EAAaH,EAAMI,MAAMC,cAEzBC,GADkC,IAAtBH,EAAWI,OAAe,GAAKC,EAASC,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAKN,cAAcO,MAAM,EAAGT,EAAWI,UAAYJ,KAAYS,MAAM,EAAG,KACjIC,KAAI,SAACC,EAASnB,GAAV,OACzB,iCAAqBmB,EAASH,MAAjBhB,MAEjB,OACI,0BAAUC,GAAII,EAAMJ,GAApB,SAAyBU,I,MCPlB,SAASS,EAAgBf,GACpC,IAAIgB,EAAShB,EAAMiB,KAAK7B,IAAIyB,KAAI,SAACnB,GAAD,OAC5B,qBAAKO,UAAU,YAAYL,GAAIF,EAAKE,GAApC,SACI,sBAAKK,UAAU,cAAf,UACI,sBAAKA,UAAU,WAAf,uBAAgCP,EAAKiB,QACrC,sBAAKV,UAAU,cAAf,yBAAqCP,EAAKwB,QAAQ,GAAGC,eACrD,sBAAKlB,UAAU,iBAAf,UACI,sBAAKA,UAAU,cAAf,wBACWP,EAAK0B,KAAKC,KAAO,QAAQC,QAAQ,GAAK,WAEjD,qBAAKC,IAAG,0CAAqC7B,EAAKwB,QAAQ,GAAGM,KAArD,qBAQxB,MAHoB,KAAjBxB,EAAMiB,KAAK5B,KACV2B,EAASnB,OAAO,EAAE,EAAEG,EAAMiB,KAAK5B,KAE5B2B,E,UCmCIS,E,kDA/CX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACDb,MAAQ,CACTuC,OAAQ,eACRC,YAAa,2CACbC,MAAO,mCACPzB,WAAY,IAEhB,EAAK0B,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBATL,E,uDAWRE,GACPC,KAAKC,SACD,CAAE/B,WAAY6B,EAAMG,OAAO/B,U,4EAGhB4B,G,4EACO,KAAlBA,EAAMI,Q,wBACAC,E,4DAA2DJ,KAAK9C,MAAMgB,W,kBAAoB8B,KAAK9C,MAAMyC,O,kBAEtFU,IAAMC,IAAIF,G,OACR,OADbG,E,QACEC,QAAgBxD,EAAMyD,SAAS,CAAEnD,KAAM,YAAaC,KAAMgD,EAAIhD,O,gDAEtEP,EAAMyD,SAAS,CAAEnD,KAAM,mBAAoBC,KAAMyC,KAAK9C,MAAMgB,a,QAEhE8B,KAAKC,SACD,CAAE/B,WAAY,K,+IAKtB,OACI,sBAAKF,UAAU,OAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,eAAf,SACA,uBACI0C,KAAMV,KAAK9C,MAAMuC,OACjBkB,YAAaX,KAAK9C,MAAMwC,YACxBkB,QAASZ,KAAKJ,WACdiB,UAAWb,KAAKF,aAChB3B,MAAO6B,KAAK9C,MAAMgB,eAEtB,cAACD,EAAD,CAAYN,GAAIqC,KAAK9C,MAAMuC,OAAQtB,MAAO6B,KAAK9C,MAAMgB,aACrD,cAACY,EAAD,CAAiBE,KAAMhC,EAAM8D,oB,GA5CnBC,IAAMC,WCHhCC,IAASC,OACL,cAAC,EAAD,IAAeC,SAASC,eAAe,W","file":"static/js/main.063549ec.chunk.js","sourcesContent":["import { createStore } from 'redux'\nimport reducer from '../reducers/index'\n\nexport const store=createStore(reducer);","import React from 'react'\n\nexport default function reducer(state = { Arr: [], Msg: \"\" }, action) {\n    switch (action.type) {\n        case \"DO_NOT_HAVE_CITY\":\n            state.Msg = <font>您輸入的地點 '{action.data}' 不存在</font>;\n            break;\n        case \"HAVE_CITY\":\n            state.Msg = \"\";\n            state.Arr.forEach((item, index) => {\n                if (item.id === action.data.id) {\n                    state.Arr.splice(index, 1);\n                }\n            });\n            state.Arr.unshift(action.data)\n            break;\n        default:\n            break;\n    }\n    return state;\n}","import React from 'react'\nimport './Header.css'\n\nexport default function Header(props){\n\treturn (\n\t\t<div className='header'>\n\t\t\t<h1>Weather Search</h1>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport cityList from './cities'\n\nexport default function SearchList(props) {\n    let inputValue = props.value.toLowerCase();\n    let listItems = inputValue.length === 0 ? [] : cityList.filter(element => element.name.toLowerCase().slice(0, inputValue.length) === inputValue).slice(0, 30)\n    let listView = listItems.map((listItem,index) =>\n        <option key={index}>{listItem.name}</option>\n    );\n    return (\n        <datalist id={props.id}>{listView}</datalist>\n    );\n}","import React from 'react'\nimport './Weather.css'\n\nexport default function WeatherListShow(props){\n    let ShowText=props.show.Arr.map((item)=>\n        <div className=\"Container\" id={item.id}>\n            <div className=\"WeatherCard\">\n                <div className=\"Location\">city：{item.name}</div>\n                <div className=\"Description\">status：{item.weather[0].description}</div>\n                <div className=\"CurrentWeather\">\n                    <div className=\"Temperature\">\n                        temp：{(item.main.temp - 273.15).toFixed(1) + '\\xB0C'}\n                    </div>\n                    <img src={`http://openweathermap.org/img/w/${item.weather[0].icon}.png`}/>\n                </div>\n            </div>\n        </div>\n    )\n    if(props.show.Msg!==\"\"){\n        ShowText.splice(0,0,props.show.Msg);\n    }\n    return ShowText;\n}","import React from 'react'\nimport axios from 'axios'\nimport { store } from '../Redux/store'\nimport Header from '../Components/TopHeader'\nimport SearchList from '../autoComponent'\nimport WeatherListShow from '../Components/WeatherList/WeatherList'\nimport './item.css';\n\nclass Searchinput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listID: \"locationList\",\n            placeHolder: \"請輸入地點(Location)\",\n            appID: \"bd45fc9db8849cb46d00a451483ccd44\",\n            inputValue: \"\"\n        }\n        this.eventInput = this.eventInput.bind(this);\n        this.eventKeyDown = this.eventKeyDown.bind(this);\n    }\n    eventInput(event) {\n        this.setState(\n            { inputValue: event.target.value }\n        )\n    }\n    async eventKeyDown(event) {\n        if (event.keyCode === 13) {\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.inputValue}&appid=${this.state.appID}`\n            try {\n                const res =await axios.get(url)\n                if (res.status === 200) store.dispatch({ type: 'HAVE_CITY', data: res.data })\n            } catch (error) {\n                store.dispatch({ type: 'DO_NOT_HAVE_CITY', data: this.state.inputValue })\n            }\n            this.setState(\n                { inputValue: \"\" }\n            )\n        }\n    }\n    render() {\n        return (\n            <div className=\"item\">\n                <Header />\n                <div className=\"search-input\">\n                <input \n                    list={this.state.listID}\n                    placeholder={this.state.placeHolder}\n                    onInput={this.eventInput}\n                    onKeyDown={this.eventKeyDown}\n                    value={this.state.inputValue}\n                /></div>\n                <SearchList id={this.state.listID} value={this.state.inputValue} />\n                <WeatherListShow show={store.getState()}/>\n            </div>);\n    }\n}\nexport default Searchinput","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Style/home.css';\nimport Searchinput from './Item/searchInput';\n\nReactDOM.render(\n    <Searchinput/>,document.getElementById(\"root\")\n);\n"],"sourceRoot":""}